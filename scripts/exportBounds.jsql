create temporary table boundRels (id integer primary key)
create temporary table boundObjs (id integer primary key)
create temporary table boundWays (id integer primary key)
insert or ignore into boundObjs(id) select objid from strobjtags where tagname='boundary' or (tagname='type' and tagvalue='boundary')
j dst=h.mapHelper();dst.open(srcMapName+'_bounds.db3',true,false);dst.close();
COMMIT
j src.exec('ATTACH "'+srcMapName+'_bounds.db3" as dst')
pragma dst.journal_mode=off
insert into boundRels select id>>2 from boundObjs where id&3=2
insert into dst.relations select * from relations where id in (select id from boundRels)
insert into dst.relationmembers select * from relationmembers where relationid in (select id from boundRels)
insert into boundWays select id>>2 from boundObjs where id&3=1
insert or ignore into boundWays select memberid from dst.relationmembers where memberidxtype&3=1
insert into dst.ways select * from ways where id in(select id from boundWays)
insert into dst.waynodes select * from waynodes where wayid in(select id from boundWays)
insert into dst.nodes select * from nodes where id in(select nodeid from dst.waynodes)
insert or ignore into boundObjs select id*4+1 from dst.ways
insert or ignore into boundObjs select id*4 from dst.nodes
insert into dst.objtags select * from objtags where objid in (select id from boundObjs)
insert into dst.tags select * from tags where id in (select tagid from dst.objtags)
insert or ignore into dst.users select * from users where id in (select userid from dst.nodes)
insert or ignore into dst.users select * from users where id in (select userid from dst.ways)
insert or ignore into dst.users select * from users where id in (select userid from dst.relations)
DETACH dst
j dst=h.mapHelper();dst.open(srcMapName+'_bounds.db3',false,true);dst.exportXML(srcMapName+'_bounds.osm');dst.close();
q
